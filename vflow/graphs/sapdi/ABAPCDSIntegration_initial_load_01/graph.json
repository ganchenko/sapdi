{
    "description": "sapdi.ABAPCDSIntegration_initial_load_01",
    "processes": {
        "abapcdsreader11": {
            "component": "com.sap.abap.cds.reader",
            "metadata": {
                "label": "ABAP CDS Reader V2",
                "x": 12,
                "y": 72,
                "height": 80,
                "width": 120,
                "extensible": true,
                "generation": 1,
                "config": {
                    "connectionID": "EU_RISE_ECQ",
                    "operatorID": "com.sap.abap.cds.reader.v2",
                    "subscriptionType": "New",
                    "action": "Initial Load",
                    "cdsname": "I_GoodsMovementDocumentDEX",
                    "subscriptionName": "ECQ_I_GoodsMovementDocumentDEX_302",
                    "chunkSize": 1000,
                    "wireformat": "Enhanced Format Conversions"
                },
                "additionaloutports": [
                    {
                        "name": "outMessageData",
                        "type": "message"
                    }
                ]
            },
            "name": "abapcdsreader1"
        },
        "python3operator1": {
            "component": "com.sap.system.python3Operator",
            "metadata": {
                "label": "Python3 Operator",
                "x": 181,
                "y": 72,
                "height": 80,
                "width": 120,
                "extensible": true,
                "filesRequired": [
                    "script.py"
                ],
                "generation": 1,
                "config": {
                    "script": "from io import StringIO\nimport csv\nimport pandas as pd\nimport json\n\nlastBatch = False\n\ndef on_input(inData):\n    # read body\n    data = StringIO(inData.body) \n    # read attributes\n    var = json.dumps(inData.attributes) \n    result = json.loads(var)\n    #columns = [] \n    if result['message.lastBatch'] == False:\n        # from here we start json parsing \n        ABAP = result['ABAP']\n        Fields = ABAP['Fields']\n        columns = [] \n        for item in Fields:\n            columns.append(item['Name'])   \n        df = pd.read_csv(data, index_col = False, names = columns) \n        df_csv = df.to_csv(index = False, header = True)\n        api.send('outString', df_csv)\n    else:\n        api.send('out', \"OK\")\n\napi.set_port_callback('inData', on_input)\n"
                },
                "additionalinports": [
                    {
                        "name": "inData",
                        "type": "message"
                    }
                ],
                "additionaloutports": [
                    {
                        "name": "outString",
                        "type": "string"
                    },
                    {
                        "name": "out",
                        "type": "string"
                    }
                ]
            }
        },
        "writefile1": {
            "component": "com.sap.file.write",
            "metadata": {
                "label": "Write File",
                "x": 649.9999980926514,
                "y": 72,
                "height": 80,
                "width": 120,
                "generation": 1,
                "config": {
                    "connection": {
                        "configurationType": "Connection Management",
                        "connectionID": "DI_DATA_LAKE"
                    },
                    "pathMode": "Static with placeholders",
                    "path": "/shared/tmp/test/data302.csv",
                    "mode": "Append"
                }
            }
        },
        "tofile1": {
            "component": "com.sap.file.toFile",
            "metadata": {
                "label": "To File",
                "x": 550.9999980926514,
                "y": 87,
                "height": 50,
                "width": 50,
                "generation": 1,
                "config": {}
            }
        },
        "graphterminator1": {
            "component": "com.sap.util.graphTerminator",
            "metadata": {
                "label": "Graph Terminator",
                "x": 365.9999990463257,
                "y": 132,
                "height": 80,
                "width": 120,
                "generation": 1,
                "config": {}
            }
        },
        "limitfilesize111": {
            "component": "com.sap.scenarioTemplates.ABAP.fileSizeLimit",
            "metadata": {
                "label": "Limit File Size",
                "x": 365.9999990463257,
                "y": 12,
                "height": 80,
                "width": 120,
                "extensible": true,
                "config": {}
            },
            "name": "limitfilesize11"
        }
    },
    "groups": [],
    "connections": [
        {
            "metadata": {
                "points": "136,112 176,112"
            },
            "src": {
                "port": "outMessageData",
                "process": "abapcdsreader11"
            },
            "tgt": {
                "port": "inData",
                "process": "python3operator1"
            }
        },
        {
            "metadata": {
                "points": "305,121 332.99999952316284,121 332.99999952316284,172 360.9999990463257,172"
            },
            "src": {
                "port": "out",
                "process": "python3operator1"
            },
            "tgt": {
                "port": "stop",
                "process": "graphterminator1"
            }
        },
        {
            "metadata": {
                "points": "305,103 332.99999952316284,103 332.99999952316284,52 360.9999990463257,52"
            },
            "src": {
                "port": "outString",
                "process": "python3operator1"
            },
            "tgt": {
                "port": "in",
                "process": "limitfilesize111"
            }
        },
        {
            "metadata": {
                "points": "489.9999990463257,52 517.9999985694885,52 517.9999985694885,103 545.9999980926514,103"
            },
            "src": {
                "port": "out",
                "process": "limitfilesize111"
            },
            "tgt": {
                "port": "path",
                "process": "tofile1"
            }
        },
        {
            "metadata": {
                "points": "604.9999980926514,112 644.9999980926514,112"
            },
            "src": {
                "port": "file",
                "process": "tofile1"
            },
            "tgt": {
                "port": "file",
                "process": "writefile1"
            }
        }
    ],
    "inports": {},
    "outports": {},
    "properties": {},
    "metadata": {
        "generation": 1
    }
}